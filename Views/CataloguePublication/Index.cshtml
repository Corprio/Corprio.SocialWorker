@using Corprio.DataModel.Business.Products
@using Corprio.AspNetCore.Site.Extensions
@using Corprio.SocialWorker.Models
@inject System.Text.Encodings.Web.JavaScriptEncoder encoder
@inject Corprio.CorprioAPIClient.APIClient corprio
@inject Microsoft.Extensions.Configuration.IConfiguration configuration
@{
    Guid organizationID = Context.SelectedOrganizationID() ?? Guid.Empty;
    ViewData["Title"] = @localizer["PublishCatalogue"];
    string goBuyClickUrl = configuration["GoBuyClickUrl"];
}
<div class="m-4">
    <div class="title-border-l">
        <h4>@localizer["PublishCatalogue"]</h4>
    </div>    
    @(
        Html.DevExtreme().DataGrid<CatalogueViewModel>()
        .StandardGrid(gridID: "catalogue-grid")
        .RowAlternationEnabled(false)
        .ShowRowLines(true)
        .NoDataText(localizer["noData"])
        .ConfigDataSource(controllerName: "CataloguePublication", organizationID: organizationID)
        .ElementAttr("class", "clickable-row")        
        .OnRowClick($"function(e){{ window.open(`{goBuyClickUrl}/{organizationID}/catalogue/Edit/productlistid`.replace('productlistid', e.key), '_blank').focus() }}")
        .Columns(col =>
        {
            // reference: https://demos.devexpress.com/ASPNetCore/Demo/DataGrid/CommandColumnCustomization/
            col.Add().Caption(localizer["Publish"]).Name("Publish").Type(GridCommandColumnType.Buttons).Width(52).ShowInColumnChooser(false)
            .Buttons(b => b.Add().Hint(localizer["PublishCatalogueHint"]).Icon("upload").OnClick("PublishCatalogue"));
            col.AddFor(m => m.Code).DataType(GridColumnDataType.String);
            col.AddFor(m => m.Name).DataType(GridColumnDataType.String);
            col.AddShortDateTimeFor(m => m.StartDate, User.UserSettings()).SortOrder(SortOrder.Desc).DataType(GridColumnDataType.Date);
            col.AddShortDateTimeFor(m => m.EndDate, User.UserSettings()).DataType(GridColumnDataType.Date);
            col.AddFor(m => m.Remark);
        })        
        .Toolbar(toolbar => toolbar.Items(items =>
        {
            items.Add().Name(DataGridToolbarItem.ColumnChooserButton).Location(ToolbarItemLocation.After);
            items.Add().Name(DataGridToolbarItem.ExportButton).Location(ToolbarItemLocation.After);
            // redirect to GoBuyClick
            items.Add().Location(ToolbarItemLocation.Before).ShowText(ToolbarItemShowTextMode.Always)
            .Widget(w => w.Button().Text(globalLocalizer["Add New"]).Type(ButtonType.Default)
            .OnClick($"function(e){{ window.open(`{goBuyClickUrl}/{organizationID}/Catalogue/Add`, '_blank').focus() }}"));
        }))
    )
    <div id="load-panel"></div>
</div>
<vc:static-data model="@StaticDataRequestViewModel.All(true)" org-info="true" />
<script>
    const viewSettingConfig = corprio.gridViewStateConfig("product", "grd");
    const langs = StaticData.OrgInfo.SupportedLanguages;
    function loadPanel() {
        return $('#load-panel').dxLoadPanel({
            message: '@encoder.Encode(localizer["Processing"])',
            visible: false,
            showIndicator: true,
            showPane: true,
            shading: true,
            hideOnOutsideClick: false
        }).dxLoadPanel('instance');
    }

    function PublishCatalogue(e) {
        console.log(e.row.data.ID);
        var prompt = DevExpress.ui.dialog.custom({
            title: "@encoder.Encode(localizer["PublishCatalogue"])",
            messageHtml: "<p>@encoder.Encode(localizer["PublishCataloguePrompt"])</p>",
            buttons: [{
                text: "@encoder.Encode(localizer["Confirm"])",
                onClick: function () {
                    loadPanel().show();
                    $.ajax({
                        url: "@Url.Action("PublishCatalogue", new { organizationID })",
                        type: "POST",
                        data: { productlistID: e.row.data.ID }
                    }).done(function () {
                        var message = DevExpress.ui.dialog.custom({
                            title: "@encoder.Encode(localizer["PublicationCompletedTitle"])",
                            messageHtml: "<p>@localizer["CataloguePublicationCompletedMessage"]</p>",
                        });
                        message.show();
                    }).fail(corprio.formatError)
                    .always(() => { loadPanel().hide(); });
                },
                type: "default",
            }, {
                text: "@encoder.Encode(localizer["Cancel"])",
                onClick: function () { console.log("Cancelled") },
                type: "normal",
            }]
        });
        prompt.show();
    }
</script>