@using Corprio.SocialWorker.Models
@using Corprio.Core.Utility
@inject Corprio.AspNetCore.Site.Services.GlobalListService Options
@inject System.Text.Encodings.Web.JavaScriptEncoder encoder

@model CheckoutViewModel
@{
    Layout = "_PublicLayout";
    Guid organizationID = Context.SelectedOrganizationID() ?? Guid.Empty;    
}

<script src="~/js/views/Checkout/Index.js" asp-append-version="true"></script>
<script>
    const vdata = {
        actions: {
            deleteSalesOrderLine: '@StringHelper.Encode(@Url.Action("DeleteSalesOrderLine", "Checkout", new { organizationID }))',
            editSalesOrderLine: '@StringHelper.Encode(@Url.Action("EditSalesOrderLine", "Checkout", new { organizationID }))',
            updateDeliveryAddress: '@StringHelper.Encode(@Url.Action("UpdateDeliveryAddress", "Checkout", new { organizationID }))',
        },
        localizer: {
        },
        settings: {
            organizationID: "@Model.OrganizationID",
            salesOrderID: "@Model.SalesOrderID",
            separator: "@CheckoutConstants.Separator"
        },
    };
</script>
<div class="m-4">
    <div class="title-border-l">
        <h3>@localizer["Checkout"]</h3>
    </div>

    <div>
        <div class="d-flex justify-content-between">
            <div class="input-group mb-3">
                <label class="my-1 mr-2" for="document-date">@globalLocalizer["OrderDate"]</label>
                <input type="text" id="document-date" value="@Model.OrderDate.ToString("d")" disabled />
            </div>

            <div class="input-group mb-3">
                <label class="my-1 mr-2" for="document-number">@globalLocalizer["DocumentNum"]</label>
                <input type="text" id="document-number" value="@Model.DocumentNum" disabled />
            </div>
        </div>                
        <br />
                
        <h4>Shopping Cart</h4>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Product Name</th>
                    <th scope="col">Price</th>
                    <th scope="col">Quantity</th>
                    <th scope="col">Unit of Measure</th>
                    <th scope="col">Options</th>
                </tr>
            </thead>
            <tbody>
                @foreach (OrderLine line in Model.Lines)
                {
                    <tr>
                        <td>@line.ProductName</td>
                        <td>@line.Price.ToString("0.00")</td>
                        <td class="sales-order-line-qty">
                            <input type="number" class="qty-face-value" disabled value="@line.Quantity.ToString("0.00")" />
                            <input type="hidden" class="qty-true-value" disabled value="@line.Quantity" />
                            <div class="invalid-feedback">Quantity must be a positive number</div>
                        </td>
                        <td>@line.UOMCode</td>
                        <td>
                            <input type="hidden" disabled value="@line.SalesOrderLineID" />
                            <button class="btn edit-line-btn"><i class="fa-regular fa-pen-to-square"></i></button>
                            <button class="btn save-line-btn"><i class="fa-regular fa-floppy-disk"></i></button>
                            <button class="btn delete-line-btn"><i class="fa-solid fa-trash"></i></button>                            
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <br />

        <h4>Delivery Address</h4>        
        <div id="delivery-address" class="form-group" style="max-width:700px;">                        
            @Html.DevExtreme().TextBoxFor(m => m.DeliveryAddress_Line1).ID("Address_Line1").Placeholder("Line 1")
            @Html.DevExtreme().TextBoxFor(m => m.DeliveryAddress_Line2).ID("Address_Line2").Placeholder("Line 2")
            @Html.DevExtreme().TextBoxFor(m => m.DeliveryAddress_City).ID("Address_City").Placeholder("City")
            @Html.DevExtreme().TextBoxFor(m => m.DeliveryAddress_State).ID("Address_State").Placeholder("State")
            @Html.DevExtreme().TextBoxFor(m => m.DeliveryAddress_PostalCode).ID("Address_PostalCode").Placeholder("Postal Code")
            @(Html.DevExtreme().SelectBoxFor(m => m.DeliveryAddress_CountryAlphaCode).ID("Address_CountryAlphaCode")
                .DataSource(Options.CountrySelectionList).DisplayExpr("Value").ValueExpr("Key").Placeholder("Country Code")
                .SearchEnabled(true))            
            <div id="address-feedback1" class="invalid-feedback">Line 1 cannot be blank</div>
            <div id="address-feedback2" class="invalid-feedback">Invalid country code</div>
        </div>
        <button id="confirm-address-btn" class="btn btn-primary">Confirm</button>
    </div>
</div>
