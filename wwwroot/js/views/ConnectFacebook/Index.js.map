{"version":3,"file":"Index.js","mappings":"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","sources":["webpack://vjs/webpack/universalModuleDefinition","webpack://vjs/./Views/Shared/Constants.ts","webpack://vjs/webpack/bootstrap","webpack://vjs/./Views/ConnectFacebook/Index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vjs\"] = factory();\n\telse\n\t\troot[\"vjs\"] = factory();\n})(self, () => {\nreturn ","//export const PERMISSIONS: string[] = ['email', 'public_profile', 'business_management', 'pages_manage_metadata',\r\n//    'pages_messaging', 'pages_manage_posts', 'pages_manage_engagement', 'instagram_basic', 'instagram_content_publish',\r\n//    'instagram_manage_comments', 'instagram_manage_messages'];\r\n\r\n/**\r\n * updates on 8 Feb 2024:\r\n * - advanced access for 'instagram_manage_comments' is NOT required for receiving webhook triggered by no-role users\r\n * - advanced access for 'pages_messaging' is NOT required for sending messages to no-role users\r\n * - advanced access for 'instagram_manage_messages' is required for sending messages to no-role users\r\n * - 'business_management' is required for viewing pages managed by the user\r\n * - 'pages_read_engagement' is required for creating posts on FB pages\r\n * - 'pages_manage_metadata' is required for managing webhooks\r\n * - 'pages_read_user_content' is required for reading comments on posts on FB pages\r\n * - 'pages_manage_engagement' is retained for making comments on other comments on FB pages\r\n */\r\n//export const PERMISSIONS: string[] = ['email', 'public_profile', 'business_management', 'pages_show_list', 'pages_manage_metadata',\r\n//    'pages_messaging', 'pages_manage_posts', 'instagram_basic', 'instagram_content_publish', 'pages_manage_engagement',\r\n//    'instagram_manage_comments', 'instagram_manage_messages', 'pages_read_engagement', 'pages_read_user_content'];\r\n\r\nexport const PERMISSIONS: string[] = ['email', 'public_profile', 'business_management', 'pages_show_list', 'pages_manage_metadata',\r\n    'pages_messaging', 'pages_manage_posts', 'instagram_basic', 'instagram_content_publish', 'instagram_manage_messages'];\r\n\r\nexport const WEBHOOKS: string[] = [\r\n    /*'feed',*/\r\n    // webhook for pages: https://developers.facebook.com/docs/graph-api/webhooks/getting-started/webhooks-for-pages/\r\n    'messages',\r\n    // any other webhook event: https://developers.facebook.com/docs/messenger-platform/webhook/#events\r\n];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { PERMISSIONS, WEBHOOKS } from '../Shared/Constants';\r\n\r\ndeclare const vdata: {\r\n    actions: {\r\n        refreshAccessToken: string;\r\n    };\r\n};\r\n\r\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/facebook-js-sdk/index.d.ts\r\n/// <reference types=\"facebook-js-sdk\" />\r\n\r\n// For the order of the following three code blocks, see: https://www.devils-heaven.com/facebook-javascript-sdk-login\r\nwindow.fbAsyncInit = function () {    \r\n    FB.init({\r\n        appId: '312852768233605',\r\n        cookie: true,                     // Enable cookies to allow the server to access the session.\r\n        xfbml: true,                     // Parse social plugins on this webpage.\r\n        version: 'v18.0'           // Use this Graph API version for this call.\r\n    });\r\n    \r\n    FB.getLoginStatus(function (response) {   // Called after the JS SDK has been initialized.\r\n        statusChangeCallback(response);        // Returns the login status.\r\n    });\r\n};\r\n\r\n(function (element: Document, tagName: string, selector: string) {\r\n    var js, fjs = element.getElementsByTagName(tagName)[0];\r\n    if (element.getElementById(selector)) { return; }\r\n    js = element.createElement(tagName); js.id = selector;\r\n    js.src = \"https://connect.facebook.net/en_US/sdk.js\";\r\n    fjs.parentNode.insertBefore(js, fjs);\r\n}(document, 'script', 'facebook-jssdk')\r\n);\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\r\n    console.log(\"DOM fully loaded and parsed\");\r\n\r\n    $('#loginBtn').on('click', function() {\r\n        console.log('Logging into Facebook...');\r\n        FB.login((response: facebook.StatusResponse) => {\r\n            if (response.authResponse) {\r\n                //user just authorized your app                \r\n                checkLoginState();\r\n            } \r\n        }, {            \r\n            scope: PERMISSIONS.toString(),\r\n            return_scopes: true\r\n        });\r\n    });\r\n\r\n    $('#logoutBtn').on('click', function () {\r\n        console.log('Logging out from Facebook...')\r\n        FB.logout(checkLoginState);\r\n    });\r\n});\r\n\r\nfunction statusChangeCallback(response: facebook.StatusResponse) {  // Called with the results from FB.getLoginStatus().\r\n    console.log('statusChangeCallback');\r\n    /*console.log(response);*/\r\n    if (response?.status === 'connected') {\r\n        // Logged into Facebook.\r\n        $('#loginBtn').hide();\r\n        $('#logoutBtn').show();\r\n        FB.api('/me', { fields: 'name' }, function (response: facebook.User) {            \r\n            $('#page-headline').text('Good to have you back, ' + response.name + '!');\r\n        });\r\n        $('#page-var-text').text('Corprio Social Worker can now do the following: ');\r\n        getPages();\r\n        refreshAccessToken(response.authResponse?.userID, response.authResponse?.accessToken);\r\n    } else {\r\n        // Not logged into Facebook or we are unable to tell.\r\n        $('#loginBtn').show();\r\n        $('#logoutBtn').hide();\r\n        $('#page-headline').text('Welcome to Corprio Social Worker!');        \r\n        $('#page-var-text').text('Click the login button below to connect your Facebook page(s) and Instagram accounts with Corprio. ' +\r\n            'Once it is done, Corprio Social Worker can do the following magic for you: ');\r\n    }\r\n}\r\n\r\n// Called when the user is finished with the Login/Logout Button.\r\nfunction checkLoginState() {    \r\n    FB.getLoginStatus(function (response) {        \r\n        statusChangeCallback(response)\r\n    })\r\n}\r\n\r\nfunction refreshAccessToken(metaId: string, accessToken: string) {\r\n    return $.post({\r\n        url: vdata.actions.refreshAccessToken,\r\n        data: {\r\n            metaId: metaId,\r\n            token: accessToken,            \r\n        }\r\n    }).done(function () {\r\n        console.log(`Token for ${metaId} is fed to backend successfully.`);\r\n    }).fail(function () {\r\n        console.log(`Failed to pass the token for ${metaId} to backend.`);\r\n    });\r\n}\r\n\r\n// turn on Meta's Built-in NLP to help detect locale (and meaning)\r\n// (note: we run this function on the client side to reduce workload on the server side)\r\n// https://developers.facebook.com/docs/graph-api/reference/page/nlp_configs/\r\n// https://developers.facebook.com/docs/messenger-platform/built-in-nlp/\r\nfunction turnOrNLP(page_id: string, page_access_token: string) {\r\n    console.log(`Turning on NLP for page ${page_id}`);\r\n    return FB.api(\r\n        `/${page_id}/nlp_configs`,\r\n        'post',\r\n        {\r\n            nlp_enabled: true,\r\n            model: 'CHINESE',\r\n            access_token: page_access_token\r\n        },\r\n        function (response: any) {\r\n            console.log('Response from nlp_configs:');\r\n            console.log(response);\r\n        }\r\n    );\r\n}\r\n\r\n// add webhooks to page subscriptions (IMPORTANT: subscribe to the fields as those subscribed on App level)\r\n// (note: we run this function on the client side to reduce workload on the server side)\r\n// https://developers.facebook.com/docs/messenger-platform/webhooks/#connect-your-app\r\nfunction addPageSubscriptions(page_id: string, page_access_token: string) {\r\n    console.log(`Subscribing to page ${page_id}`);\r\n    return FB.api(\r\n        `/${page_id}/subscribed_apps`,\r\n        'post',\r\n        {\r\n            subscribed_fields: WEBHOOKS,\r\n            access_token: page_access_token,\r\n        },\r\n        function (response: any) {\r\n            console.log('Response from subscribed_apps:');\r\n            console.log(response);\r\n            if (response && !response.error) {\r\n                return turnOrNLP(page_id, page_access_token);\r\n            }\r\n        },\r\n    )\r\n}\r\n\r\nfunction getPages() {\r\n    FB.api('/me/accounts', function (response: facebook.AuthResponse | any) {\r\n        if (response && !response.error) {\r\n            /*console.log('response from getPages()...');*/\r\n            /*console.log({ response });*/\r\n            for (let i = 0; i < response.data.length; i++) {\r\n                const page_id = response.data[i].id;\r\n                const page_access_token = response.data[i].access_token;                \r\n                addPageSubscriptions(page_id, page_access_token);\r\n            }\r\n        } else {\r\n            console.error(response.error);\r\n        }\r\n    })\r\n}"],"names":[],"sourceRoot":""}